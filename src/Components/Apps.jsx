import React, { useState } from 'react';
// import './App.css'; // Assegure-se de criar este arquivo CSS para estiliza√ß√£o

function Apps() {
  // Lista de aplicativos com informa√ß√µes reais
  // eslint-disable-next-line no-unused-vars
  const [apps, setApps] = useState([
    // Categoria: Cyber Seguran√ßa
    {
      id: 1,
      name: "CyberSecurity",
      description: "Sistema de seguran√ßa digital desenvolvido especificamente para prefeituras e √≥rg√£os p√∫blicos, focado na prote√ß√£o e gest√£o de credenciais sens√≠veis.",
      version: "1.0.0",
      icon: "üîê", 
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/ciber-seguranca/releases/download/v1.0.0/AutoProtecao.exe",
      size: "100 MB",
      category: "Cyber Seguran√ßa",
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "100 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    },
    {
      id: 2,
      name: "Gerador de Senhas",
      description: "Um gerador de senhas profissional e seguro baseado em Flask com uma interface futurista, alta entropia criptogr√°fica e seguindo os padr√µes NIST SP 800-63B.",
      version: "1.0.0",
      icon: "üîë",
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/ciber-seguranca/releases/download/v1.0.0/geradorsenhas.exe",
      size: "59 MB",
      category: "Cyber Seguran√ßa",
      features: [
        "Cria senhas aleat√≥rias com comprimento configur√°vel (8 a 64 caracteres)",
        "Permite selecionar tipos de caracteres (mai√∫sculas, min√∫sculas, n√∫meros, especiais)",
        "Exclui caracteres semelhantes (i, l, 1, I, O, 0) e amb√≠guos ({}, [], (), /)",
        "Gera frases-senha (passphrases) com palavras aleat√≥rias",
        "Garante alta entropia criptogr√°fica e aleatoriedade verdadeira",
        "An√°lise em tempo real da for√ßa da senha"
      ],
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "100 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    },
    {
      id: 3,
      name: "Checklist de Seguran√ßa",
      description: "Aplica√ß√£o desenvolvida para auxiliar servidores p√∫blicos e funcion√°rios internos na realiza√ß√£o de verifica√ß√µes peri√≥dicas de seguran√ßa da informa√ß√£o, garantindo conformidade com normas e regulamenta√ß√µes, incluindo a LGPD e os padr√µes ISO.",
      version: "1.0.0",
      icon: "‚úì",
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/ciber-seguranca/releases/download/v1.0.0/IsoChecklist.exe",
      size: "39.5 MB",
      category: "Cyber Seguran√ßa",
      features: [
        "Realizar verifica√ß√µes sistem√°ticas de seguran√ßa da informa√ß√£o",
        "Acompanhar o progresso das verifica√ß√µes",
        "Gerar relat√≥rios detalhados",
        "Manter hist√≥rico de conformidade para fins de auditoria"
      ],
      pillars: [
        "Confidencialidade: Garantia de que apenas pessoas autorizadas acessem informa√ß√µes sens√≠veis",
        "Integridade: Preserva√ß√£o da precis√£o e completude dos dados",
        "Disponibilidade: Garantia de acesso aos sistemas quando necess√°rio"
      ],
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "100 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    },
    {
      id: 4,
      name: "Simulador de Phishing",
      description: "Ferramenta projetada para criar e executar campanhas de phishing controladas em ambientes corporativos ou educacionais. O objetivo √© aumentar a conscientiza√ß√£o sobre seguran√ßa cibern√©tica.",
      version: "1.0.0",
      icon: "üé£",
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/ciber-seguranca/releases/download/v1.0.0/simuladorphishing.exe",
      size: "75.6 MB",
      category: "Cyber Seguran√ßa",
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "100 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    },
    
    // Categoria: Desenvolvimento de Software
    {
      id: 5,
      name: "CurriculoBot",
      description: "Assistente interativo com interface futurista que ajuda usu√°rios a criar curr√≠culos profissionais atrav√©s de uma experi√™ncia de chatbot guiada.",
      version: "1.0.0",
      icon: "üìù",
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/desenvolvimento/releases/download/v1.0.0/Gerador.Curriculo.exe",
      size: "39.2 MB",
      category: "Desenvolvimento de Software",
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "100 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    },
    {
      id: 6,
      name: "Sistema de E-mails para Prefeituras",
      description: "Sistema desenvolvido para atender √†s necessidades espec√≠ficas das Prefeituras, oferecendo uma solu√ß√£o integrada para a comunica√ß√£o via e-mail institucional.",
      version: "1.0.0",
      icon: "üìß",
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/desenvolvimento/releases/download/v1.0.0/Sistema_Email_Prefeituras.exe",
      size: "139 MB",
      category: "Desenvolvimento de Software",
      features: [
        "Envio de e-mails individuais e em massa",
        "Agendamento de e-mails",
        "Gerenciamento de contatos e grupos",
        "Templates personaliz√°veis",
        "Relat√≥rios de atividades",
        "Suporte a m√∫ltiplas prefeituras"
      ],
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "200 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    },
    {
      id: 7,
      name: "Templates de E-mail",
      description: "Conjunto de templates personaliz√°veis para uso com o Sistema de E-mails para Prefeituras.",
      version: "1.0.0",
      icon: "üìã",
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/desenvolvimento/releases/download/v1.0.0/templatesemail.exe",
      size: "34.9 MB",
      category: "Desenvolvimento de Software",
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "100 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    },
    
    // Categoria: Intelig√™ncia Artificial
    {
      id: 8,
      name: "Neura AI Assistant",
      description: "Sistema desktop avan√ßado desenvolvido em Python com Tkinter que integra a API do Dify para criar uma interface de chatbot inteligente, moderna e de f√°cil utiliza√ß√£o.",
      version: "1.0.0",
      icon: "ü§ñ",
      downloadUrl: "https://github.com/LTD-2025-1-Cyber-Security-Project/inteligencia-artificial/releases/download/v1.0.0/neuraai-assistant.exe",
      size: "57.6 MB",
      category: "Intelig√™ncia Artificial",
      requirements: {
        os: "Windows 10 ou superior",
        ram: "4 GB de RAM",
        disk: "100 MB de espa√ßo em disco"
      },
      installation: [
        "Fa√ßa o download do arquivo .exe",
        "Execute o instalador como administrador",
        "Siga as instru√ß√µes na tela"
      ]
    }
  ]);

  const [selectedApp, setSelectedApp] = useState(null);
  const [selectedCategory, setSelectedCategory] = useState("Todos");
  const [searchTerm, setSearchTerm] = useState("");

  // Lista de categorias dispon√≠veis
  const categories = ["Todos", "Cyber Seguran√ßa", "Desenvolvimento de Software", "Intelig√™ncia Artificial"];

  // Fun√ß√£o para exibir detalhes de um aplicativo
  const showAppDetails = (app) => {
    setSelectedApp(app);
  };

  // Fun√ß√£o para fechar a visualiza√ß√£o detalhada
  const closeDetails = () => {
    setSelectedApp(null);
  };

  // Fun√ß√£o de download
  const downloadApp = (app) => {
    // Criando um elemento <a> invis√≠vel para fazer o download
    const link = document.createElement('a');
    link.href = app.downloadUrl;
    link.setAttribute('download', ''); // Isso for√ßa o download ao inv√©s de navega√ß√£o
    link.setAttribute('target', '_blank'); // Isso evita problemas em alguns navegadores
    
    // Adicionando o elemento ao DOM
    document.body.appendChild(link);
    
    // Clicando no link para iniciar o download
    link.click();
    
    // Removendo o elemento do DOM ap√≥s o clique
    document.body.removeChild(link);
    
    // Exibindo notifica√ß√£o
    alert(`Iniciando download de ${app.name} (${app.size})`);
  };
  
  // Filtrar aplicativos por categoria e termo de busca
  const filteredApps = apps.filter(app => {
    // Filtro por categoria 
    const categoryMatch = selectedCategory === "Todos" || app.category === selectedCategory;
    
    // Filtro por termo de busca (nome ou descri√ß√£o)
    const searchMatch = app.name.toLowerCase().includes(searchTerm.toLowerCase()) || 
                       app.description.toLowerCase().includes(searchTerm.toLowerCase());
    
    return categoryMatch && searchMatch;
  });

  return (
    <div className="apps-container">
      <header className="apps-header">
        <h1>Nossos Aplicativos</h1>
        <p>Descubra nossa cole√ß√£o de aplicativos desenvolvidos para facilitar seu trabalho</p>
      </header>
      
      {/* Filtros e busca */}
      <div className="filter-section">
        <div className="category-filter">
          <label htmlFor="category-select">Filtrar por categoria:</label>
          <select 
            id="category-select"
            value={selectedCategory}
            onChange={(e) => setSelectedCategory(e.target.value)}
            className="category-select"
          >
            {categories.map((category) => (
              <option key={category} value={category}>{category}</option>
            ))}
          </select>
        </div>
        
        <div className="search-box">
          <input
            type="text"
            placeholder="Buscar aplicativos..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="search-input"
          />
          {searchTerm && (
            <button 
              className="clear-search" 
              onClick={() => setSearchTerm("")}
            >
              √ó
            </button>
          )}
        </div>
      </div>
      
      {/* Contagem de resultados */}
      <div className="results-count">
        {filteredApps.length === 0 ? (
          <p>Nenhum aplicativo encontrado</p>
        ) : (
          <p>Exibindo {filteredApps.length} {filteredApps.length === 1 ? 'aplicativo' : 'aplicativos'}</p>
        )}
      </div>

      {/* Grade de aplicativos */}
      <div className="apps-grid">
        {filteredApps.map((app) => (
          <div key={app.id} className="app-card">
            <div className="category-tag">{app.category}</div>
            <div className="app-icon">{app.icon}</div>
            <h2>{app.name}</h2>
            <p className="app-version">Vers√£o {app.version}</p>
            <p className="app-description">{app.description}</p>
            <p className="app-size">Tamanho: {app.size}</p>
            <div className="app-actions">
              <button 
                className="details-button"
                onClick={() => showAppDetails(app)}
              >
                Detalhes
              </button>
              <button 
                className="download-button"
                onClick={() => downloadApp(app)}
              >
                Download
              </button>
            </div>
          </div>
        ))}
      </div>

      {selectedApp && (
        <div className="app-modal-overlay">
          <div className="app-modal">
            <button className="close-button" onClick={closeDetails}>√ó</button>
            <div className="app-modal-content">
              <div className="app-category-badge">{selectedApp.category}</div>
              <div className="app-icon-large">{selectedApp.icon}</div>
              <h2>{selectedApp.name}</h2>
              <p className="app-version">Vers√£o {selectedApp.version}</p>
              <p className="app-size-badge">Tamanho: {selectedApp.size}</p>
              
              <div className="app-details">
                <h3>Descri√ß√£o detalhada</h3>
                <p>{selectedApp.description}</p>
                
                {selectedApp.features && (
                  <>
                    <h3>Funcionalidades</h3>
                    <ul className="features-list">
                      {selectedApp.features.map((feature, index) => (
                        <li key={index}>{feature}</li>
                      ))}
                    </ul>
                  </>
                )}
                
                {selectedApp.pillars && (
                  <>
                    <h3>Pilares fundamentais</h3>
                    <ul className="pillars-list">
                      {selectedApp.pillars.map((pillar, index) => (
                        <li key={index}>{pillar}</li>
                      ))}
                    </ul>
                  </>
                )}
                
                <h3>Requisitos do sistema</h3>
                <ul className="requirements-list">
                  <li><strong>Sistema:</strong> {selectedApp.requirements.os}</li>
                  <li><strong>Mem√≥ria:</strong> {selectedApp.requirements.ram}</li>
                  <li><strong>Espa√ßo em disco:</strong> {selectedApp.requirements.disk}</li>
                </ul>
                
                <h3>Instru√ß√µes de instala√ß√£o</h3>
                <ol className="installation-list">
                  {selectedApp.installation.map((step, index) => (
                    <li key={index}>{step}</li>
                  ))}
                </ol>
              </div>
              
              <div className="download-section">
                <button 
                  className="download-button-large"
                  onClick={() => downloadApp(selectedApp)}
                >
                  Baixar {selectedApp.name}
                </button>
                <p className="download-note">
                  <strong>Nota:</strong> Ao clicar no bot√£o acima, o download iniciar√° automaticamente.
                  N√£o √© necess√°rio navegar para o GitHub.
                </p>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default Apps;